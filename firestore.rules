rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }
    
    function isAdmin() {
      // Check if the user document exists and has the 'admin' role.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update: if isAdmin() || isUser(userId);
      allow delete: if isAdmin();
    }

    // PROJECTS
    match /projects/{projectId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isUser(resource.data.ownerUid);
    }

    // TASKS & SUBCOLLECTIONS
    match /tasks/{taskId} {
      // Allow read access to any authenticated user. App logic filters visibility.
      allow read: if isAuthenticated();

      // Anyone authenticated who owns the parent project can create a task.
      allow create: if isAuthenticated() && 
                      get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.ownerUid == request.auth.uid;
      
      // Only the task owner can update it.
      allow update: if isUser(resource.data.ownerUid);

      // Only the task owner can delete it.
      allow delete: if isUser(resource.data.ownerUid);

      // Subcollection: Timeline
      match /timeline/{eventId} {
        allow read: if isAuthenticated();
        allow create: if isUser(request.resource.data.author.uid);
        allow update, delete: if false; // Immutable events
      }

      // Subcollection: Attachments
      match /attachments/{attachmentId} {
        allow read: if isAuthenticated();
        allow create: if isUser(request.resource.data.ownerUid);
        allow delete: if isUser(resource.data.ownerUid);
        allow update: if false; // Immutable attachments
      }
    }

    // ISSUES
    match /issues/{issueId} {
      allow read: if isAuthenticated();
      
      // Allow creation if user is authenticated. App logic handles authorization.
      allow create: if isAuthenticated();
      
      // Allow update by the issue owner or an assigned user.
      allow update: if isUser(resource.data.ownerUid) || request.auth.uid in resource.data.assignedToUids;

      // Allow deletion by the issue creator OR the overall project owner.
      // This is key for fixing the project deletion cascade.
      allow delete: if isUser(resource.data.ownerUid) || isUser(resource.data.projectOwnerUid);
    }

    // ATTENDANCE
    match /attendance/{attendanceId} {
      allow read: if isAdmin();
      allow create: if isUser(request.resource.data.userId);
      allow update, delete: if isAdmin();
    }
  }
}
