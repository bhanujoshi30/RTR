rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    
    function isAdmin() {
      // Use this function ONLY for single-document operations (get, create, update, delete).
      // DO NOT use in rules for collection queries (list), as it will fail.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for users collection
    match /users/{userId} {
      // Users can read/update their own profile.
      allow read, update: if isSignedIn() && isOwner(userId);
      
      // Admins can create, update, or delete any user document.
      allow write: if isSignedIn() && isAdmin();
    }
    
    match /projects/{projectId} {
      // Owner, client, or member can read.
      allow read: if isSignedIn() && (
        isOwner(resource.data.ownerUid) || 
        request.auth.uid == resource.data.clientUid || 
        request.auth.uid in resource.data.memberUids
      );
      
      // Owner or admin can create or delete
      allow create: if isSignedIn() && (isOwner(request.resource.data.ownerUid) || isAdmin());
      allow delete: if isSignedIn() && (isOwner(resource.data.ownerUid) || isAdmin());
      
      // Owner or admin can update
      allow update: if isSignedIn() && (isOwner(resource.data.ownerUid) || isAdmin());
    }
    
    match /tasks/{taskId} {
      // Project owner, task owner, or someone assigned can read.
      allow read: if isSignedIn() && (
        isOwner(resource.data.projectOwnerUid) || 
        isOwner(resource.data.ownerUid) ||
        request.auth.uid in resource.data.assignedToUids
      );
      
      // Admin or project owner can create tasks.
      allow create: if isSignedIn() && (isOwner(request.resource.data.projectOwnerUid) || isAdmin());
      
      // Admin or task owner can delete it.
      allow delete: if isSignedIn() && (isOwner(resource.data.ownerUid) || isAdmin());
      
      // Admin, task owner, or assigned user can update.
      allow update: if isSignedIn() && (
        isOwner(resource.data.ownerUid) || 
        request.auth.uid in resource.data.assignedToUids ||
        isAdmin()
      );
      
      match /timeline/{eventId} {
        // Any user who can read the parent task can read its timeline
        allow read: if isSignedIn() && (
          isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.projectOwnerUid) ||
          isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.ownerUid) ||
          request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids
        );
        allow create: if isSignedIn();
        allow update, delete: if false;
      }

      match /attachments/{attachmentId} {
        // Any user who can read the parent task can read its attachments
        allow read: if isSignedIn() && (
          isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.projectOwnerUid) ||
          isOwner(get(/databases/$(database)/documents/tasks/$(taskId)).data.ownerUid) ||
          request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids
        );
        allow create: if isSignedIn();
        // Only the attachment owner can delete
        allow delete: if isSignedIn() && (isOwner(resource.data.ownerUid) || isAdmin());
      }
    }
    
    match /issues/{issueId} {
       // Project owner, issue owner, or assigned user can read
       allow read: if isSignedIn() && (
         isOwner(resource.data.projectOwnerUid) || 
         isOwner(resource.data.ownerUid) ||
         request.auth.uid in resource.data.assignedToUids
       );
       // Anyone who can read the parent task can create an issue.
       allow create: if isSignedIn();
       // Admin or issue owner can update/delete
       allow update, delete: if isSignedIn() && (isOwner(resource.data.ownerUid) || isAdmin());
    }
    
    match /attendance/{attendanceId} {
      // Admins can read all attendance, users can read their own
      allow read: if isSignedIn() && (isAdmin() || isOwner(resource.data.userId));
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update, delete: if false;
    }
  }
}
