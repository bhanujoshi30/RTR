
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isTaskOwner(taskId) {
        return get(/databases/$(database)/documents/tasks/$(taskId)).data.ownerUid == request.auth.uid;
    }
    
    function isAssignedToTask(taskId) {
        return request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids;
    }
    
    match /users/{userId} {
      allow read: if isAuth();
      allow create: if isAuth(); // User can create their own doc on signup
      allow update, delete: if request.auth.uid == userId || isAdmin();
    }

    match /projects/{projectId} {
      allow create: if isAuth();
      // You can read a project if you are its owner or an admin
      allow read: if isAuth() && (resource.data.ownerUid == request.auth.uid || isAdmin());
      // You can only update/delete a project if you are its owner or an admin
      allow update, delete: if isAuth() && (resource.data.ownerUid == request.auth.uid || isAdmin());
    }

    match /tasks/{taskId} {
      // You can create a task if you are authenticated and own the project it's in
      allow create: if isAuth() && get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.ownerUid == request.auth.uid;

      // You can read tasks in a project if you own that project (e.g. for dashboard counts), or if you are assigned to a subtask
      allow list: if isAuth() && request.query.limit > 0; // More refined rules below for get
      
      // Allow read on a single task if you own the project, or own the task, or are assigned to it (if subtask)
      allow get: if isAuth() && (
                    resource.data.projectOwnerUid == request.auth.uid || 
                    resource.data.ownerUid == request.auth.uid ||
                    (resource.data.parentId != null && request.auth.uid in resource.data.assignedToUids)
                  );
      
      // Update rules: Owner can update anything. Assigned user can only update status/desc/dueDate of sub-tasks.
      allow update: if isAuth() && (
                      (resource.data.ownerUid == request.auth.uid) ||
                      (resource.data.parentId != null && 
                       request.auth.uid in resource.data.assignedToUids &&
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'description', 'dueDate', 'updatedAt']))
                    );
      
      // Delete only if you own the task
      allow delete: if isAuth() && resource.data.ownerUid == request.auth.uid;
    }

    match /issues/{issueId} {
      // You can create an issue if you own the parent task or are assigned to it
      allow create: if isAuth() && (isTaskOwner(request.resource.data.taskId) || isAssignedToTask(request.resource.data.taskId));

      // You can read issues in a project if you own that project
      // This rule allows the collection query on the dashboard to work
       allow read: if isAuth() && (
                    resource.data.projectOwnerUid == request.auth.uid ||
                    resource.data.ownerUid == request.auth.uid ||
                    (request.auth.uid in resource.data.assignedToUids) ||
                    isAdmin()
                  );
      
      // Update rules: owner can update anything, assigned can only update status
       allow update: if isAuth() && (
                      resource.data.ownerUid == request.auth.uid ||
                      (request.auth.uid in resource.data.assignedToUids && 
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status', 'updatedAt']))
                    );

      // Delete only if you own the issue
      allow delete: if isAuth() && resource.data.ownerUid == request.auth.uid;
    }
  }
}
