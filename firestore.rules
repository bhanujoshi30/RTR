
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Projects:
    // Any authenticated user can see the list of projects or get a single project's top-level details.
    // This is safe because sensitive info (tasks/issues) is protected by stricter rules.
    match /projects/{projectId} {
      allow read: if request.auth != null;

      // Only the owner can create, update, or delete a project.
      allow create: if request.auth.uid == request.resource.data.ownerUid;
      allow update, delete: if request.auth.uid == resource.data.ownerUid;
    }

    // Tasks and their subcollections
    match /tasks/{taskId} {
      // You can read a task if:
      // 1. You are the owner of the project it belongs to.
      // 2. You are the client assigned to the project.
      // 3. You are directly assigned to the task.
      // This rule uses data denormalized onto the task document itself, so it's query-compatible.
      allow read: if request.auth.uid == resource.data.projectOwnerUid
                   || request.auth.uid == resource.data.clientUid
                   || request.auth.uid in resource.data.assignedToUids;

      // You can create a task if you are the project owner or an admin.
      allow create: if request.auth.uid == request.resource.data.projectOwnerUid
                     || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // You can update a task if you are the project owner or assigned to it.
      allow update: if request.auth.uid == resource.data.projectOwnerUid
                     || request.auth.uid in resource.data.assignedToUids;

      // You can delete a task only if you are the project owner.
      allow delete: if request.auth.uid == resource.data.projectOwnerUid;

      // Attachments subcollection
      match /attachments/{attachmentId} {
        // Permissions mirror the parent task's read permission.
        allow read: if request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.projectOwnerUid
                     || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.clientUid
                     || request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids;
        
        // Only the person assigned to the task or the project owner can add attachments.
        // Only the attachment owner can delete it.
        allow create: if request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids
                       || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.projectOwnerUid;
        allow delete: if request.auth.uid == resource.data.ownerUid;
      }

      // Timeline subcollection
      match /timeline/{eventId} {
        // Permissions mirror the parent task's read permission.
        allow read: if request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.projectOwnerUid
                     || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.clientUid
                     || request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids;
        
        // Only the user performing the action can create a timeline event.
        allow create: if request.auth.uid == request.resource.data.author.uid;
        // Timeline events are immutable.
        allow update, delete: if false;
      }
    }

    // Issues and their subcollections
    match /issues/{issueId} {
      // Similar to tasks, you can read an issue if:
      // 1. You are the project owner.
      // 2. You are the client assigned to the project.
      // 3. You created the issue.
      // 4. You are directly assigned to the issue.
      allow read: if request.auth.uid == resource.data.projectOwnerUid
                   || request.auth.uid == resource.data.clientUid
                   || request.auth.uid == resource.data.ownerUid
                   || request.auth.uid in resource.data.assignedToUids;

      // You can create/update an issue if you are the project owner or assigned to the parent task or the issue itself.
      allow create, update: if request.auth.uid == resource.data.projectOwnerUid
                          || request.auth.uid in get(/databases/$(database)/documents/tasks/$(request.resource.data.taskId)).data.assignedToUids
                          || request.auth.uid in resource.data.assignedToUids
                          || request.auth.uid == resource.data.ownerUid;

      // Only the issue creator or project owner can delete it.
      allow delete: if request.auth.uid == resource.data.ownerUid
                     || request.auth.uid == resource.data.projectOwnerUid;
    }

    // User management
    match /users/{userId} {
      // A user can read/update their own document.
      // An admin can read/update/list/create/delete any user document.
      function isUserAdmin() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
      allow get, update: if request.auth.uid == userId || isUserAdmin();
      allow list, create, delete: if isUserAdmin();
    }
  }
}
