
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read;
      allow write: if request.auth.uid == userId || isAdmin();
    }
    
    match /projects/{projectId} {
      // Allow any authenticated user to read project-level data.
      // Task/issue data is protected by more specific rules.
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.ownerUid || isAdmin();
      allow update, delete: if request.auth.uid == resource.data.ownerUid || isAdmin();
    }

    match /tasks/{taskId} {
      // Rules for the task document itself
      allow read: if
        request.auth.uid == resource.data.projectOwnerUid ||
        request.auth.uid == resource.data.clientUid ||
        (resource.data.memberUids != null && request.auth.uid in resource.data.memberUids) ||
        (resource.data.assignedToUids != null && request.auth.uid in resource.data.assignedToUids) ||
        isAdmin();
      
      allow create, update, delete: if 
        request.auth.uid == resource.data.ownerUid || // Task owner
        (resource.data.assignedToUids != null && request.auth.uid in resource.data.assignedToUids) || // Assigned user
        isAdmin();

      // Rules for subcollections of a task
      match /timeline/{eventId} {
        allow read, write: if 
          get(/databases/$(database)/documents/tasks/$(taskId)).data.ownerUid == request.auth.uid ||
          (get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids != null && request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids) ||
          isAdmin();
      }
      
      match /attachments/{attachmentId} {
        allow read, write: if
          get(/databases/$(database)/documents/tasks/$(taskId)).data.ownerUid == request.auth.uid ||
          (get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids != null && request.auth.uid in get(/databases/$(database)/documents/tasks/$(taskId)).data.assignedToUids) ||
          isAdmin();
      }
    }
    
    match /issues/{issueId} {
      let taskDocPath = /databases/$(database)/documents/tasks/$(resource.data.taskId);
      let taskData = get(taskDocPath).data;
      let isTaskOwner = request.auth.uid == taskData.ownerUid;
      let isAssignedToTask = taskData.assignedToUids != null && request.auth.uid in taskData.assignedToUids;

      allow read, write: if isTaskOwner || isAssignedToTask || isAdmin();
    }
    
    match /attendance/{attendanceId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read: if isAdmin();
    }
  }
}
