
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check the user's role from their document
    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    // Users can read their own document. Admins can read/write any document.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || getRole(request.auth.uid) == 'admin';
      allow write: if getRole(request.auth.uid) == 'admin';
      allow create: if request.auth.uid == userId; // Allow user to create their own doc on signup
    }

    // Any authenticated user can read project and task data.
    // This relies on the application code to filter what a specific user should see.
    // This is secure as long as the write rules are strict.
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      // Only the user listed as ownerUid can update or delete the project.
      allow update, delete: if request.auth.uid == resource.data.ownerUid;
    }

    match /tasks/{taskId} {
      allow read: if request.auth != null;
      // You must own the project to create a task in it.
      allow create: if get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.ownerUid == request.auth.uid;
      // You must own the task to delete it.
      allow delete: if resource.data.ownerUid == request.auth.uid;
      // You can update a task if you own it, or if you are assigned to it.
      allow update: if resource.data.ownerUid == request.auth.uid || request.auth.uid in resource.data.assignedToUids;

      // Rules for attachments subcollection
      match /attachments/{attachmentId} {
        allow read, create: if request.auth != null;
      }
    }
    
    match /issues/{issueId} {
      allow read: if request.auth != null;
      // You must own the task or be assigned to it to create an issue
      allow create: if get(/databases/$(database)/documents/tasks/$(request.resource.data.taskId)).data.ownerUid == request.auth.uid || request.auth.uid in get(/databases/$(database)/documents/tasks/$(request.resource.data.taskId)).data.assignedToUids;
      // You must own the issue to delete it.
      allow delete: if resource.data.ownerUid == request.auth.uid;
      // You can update an issue if you own it, or if you are assigned to it.
      allow update: if resource.data.ownerUid == request.auth.uid || request.auth.uid in resource.data.assignedToUids;
    }
  }
}
