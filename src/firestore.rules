rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Helper functions
    function isProjectOwner(projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data.ownerUid == request.auth.uid;
    }

    function isProjectClient(projectId) {
      return get(/databases/$(database)/documents/projects/$(projectId)).data.clientUid == request.auth.uid;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isAssignedToTask(assignedToUids) {
      return assignedToUids != null && request.auth.uid in assignedToUids;
    }

    // ✅ Users collection
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // ✅ Projects collection
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.ownerUid;
      allow update, delete: if isProjectOwner(projectId) || isAdmin();
    }

    // ✅ Tasks collection
    match /tasks/{taskId} {
      allow read: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isProjectClient(resource.data.projectId) ||
        isAssignedToTask(resource.data.assignedToUids) ||
        isAdmin()
      );

      allow create: if request.auth != null && (
        isProjectOwner(request.resource.data.projectId) ||
        isAdmin()
      );

      allow update: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isAssignedToTask(resource.data.assignedToUids) ||
        isAdmin()
      );

      allow delete: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isAdmin()
      );
    }

    // ✅ Issues collection
    match /issues/{issueId} {
      allow read: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isAssignedToTask(resource.data.assignedToUids) ||
        isAdmin()
      );

      allow create: if request.auth != null && (
        isProjectOwner(request.resource.data.projectId) ||
        isAdmin()
      );

      allow update: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isAssignedToTask(resource.data.assignedToUids) ||
        isAdmin()
      );

      allow delete: if request.auth != null && (
        isProjectOwner(resource.data.projectId) ||
        isAdmin()
      );
    }

    // ✅ Attendance collection
    match /attendance/{attendanceId} {
      allow read, create: if request.auth != null;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.userId ||
        isAdmin()
      );
      allow delete: if request.auth != null && isAdmin();
    }

  }
}
